.MODEL MEDIUM
.STACK 1000H
.DATA 
	a word 0
	b word 0
	ESCKEY byte 0
	xcoordinate word 0
	ycoordinate word 0
	xclick word 0
	yclick word 0
	button word 0
	P_X1 DW 0
	P_X1L DW ?
	P_X2L DW ?
	P_X2 DW 640
	P_Y1 DW 0F0H
	P_Y1L DW 480
	P_CHOICE DB 0H
	STX DW 120
	STY DW 290
	TEMPX DW ?
	TEMPY DW ?
	C_CHOICE DB 0H
	C_I DW ?
	C_J DW ?
	STX1 DW 400
	FLAG DB 0
	KEY DB 0
	NEW DW ?,?
	OLD DW ?,?
	TIK DW ?
	B_X1 DW 70
	B_Y1 DW 100
	B_X2 DW 180
	B_Y2 DW 250
	B_COLOR DB 1000B
	FREQUENCY DW ?
	HR DW 380
	HL DW 250
	
	WELCOME  DB 10,13,10,13,10,13,10,13,10,13,10,13
         DB  10,13,9,9,9,"*****************************************"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**              WELL COME              **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**         STICK FIGHTING GAME         **"
         DB  10,13,9,9,9,"**                                     **"                     
         DB  10,13,9,9,9,"**                COAL                 **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"*****************************************$"
		 
		 BOX  DB 10,13,10,13,10,13,10,13,10,13,10,13
         DB  10,13,9,9,9,"**********************************"
         DB  10,13,9,9,9,"**                          	   **"
         DB  10,13,9,9,9,"*********************************$"
		 
		 
START		 DB 10,13,10,13,10,13,10,13,10,13,10,13
         DB  10,13,9,9,9,"*****************************************"
         DB  10,13,9,9,9,"** 1. A FOR BACK (PLAYER 1)            **"
         DB  10,13,9,9,9,"** 2. S FOR FORWARD (PLAYER 1)         **"
         DB  10,13,9,9,9,"** 3. Z FOR KICK (PLAYER 1)            **"
         DB  10,13,9,9,9,"** 4. X FOR PUNCH (PLAYER 1)           **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"** 5. J FOR FORWARD (PLAYER 2)         **"                     
         DB  10,13,9,9,9,"** 6. K FOR BACK (PLAYER 2)            **"
         DB  10,13,9,9,9,"** 7. N FOR KICK (PLAYER 2)            **"
         DB  10,13,9,9,9,"** 8. M FOR PUNCH (PLAYER 2)           **"
         DB  10,13,9,9,9,"*****************************************$"
		 
FINISH1		 DB 10,13,10,13,10,13,10,13,10,13,10,13
         DB  10,13,9,9,9,"*****************************************"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**          PLAYER $"
		FINISH2 DB " WON               **"
				DB  10,13,9,9,9,"**                                     **$"
 
        
FINISH3		DB  10,13,9,9,9,"**                                     **"                     
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"*****************************************$"
		 
MAINMENU DB 10,13,10,13,10,13,10,13,10,13,10,13
         DB  10,13,9,9,9,"*****************************************"
         DB  10,13,9,9,9,"**              MAIN MENU              **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**        SELECT THE DESIRE OPTION     **"
         DB  10,13,9,9,9,"**         1.NEW GAME                  **"
         DB  10,13,9,9,9,"**         2.DEVELOPERS                **"
         DB  10,13,9,9,9,"**         3.RULES                     **"
         DB  10,13,9,9,9,"**         4.EXIT                      **"
         DB  10,13,9,9,9,"*****************************************$"		 
		 
ABOUT    DB 10,13,10,13,10,13,10,13,10,13,10,13
         DB  10,13,9,9,9,"*****************************************"
         DB  10,13,9,9,9,"**             DEVELOPED BY            **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**           MUHAMMAD HAMZA            **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**           HASEEB ZAHID              **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**         					         **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"*****************************************$"	
THANKS   DB 10,13,10,13,10,13,10,13,10,13,10,13
         DB  10,13,9,9,9,"*****************************************"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**          THANK YOU VERY MUCH        **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**             ALLAH HAFIZ             **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"**                                     **"
         DB  10,13,9,9,9,"*****************************************$"      		 

MSG2 DB 'CLICK  Here for next: $'  
MSG3 DB 'Enter your choice: $ '
MSG4 DB 'YOU HAVE SELECTED :$'	
	PLAYER DB 1H
	temp DB 0
	
.CODE
	MAIN PROC
	MOV AX,@DATA
	MOV DS,AX
mov ah,0
	mov al,10h
	int 10h
	mov ah,0
	mov al,10h
	int 10h
	mov ah,0
	mov al,10h
	int 10h

 
		;--------------------------------------------------
	
 
	
	
	

	CALL COLOR
       
       
       
		;--------------------------------------------------
	
        call main2

      
	;call main1
REPEAT_A::
	CALL COLOR
        MOV AH,9
        MOV DX,OFFSET MAINMENU
        INT 21H 
        CALL ENTER1
        CALL ENTER1
	
	MOV AH,9
    MOV DX,OFFSET (MSG3)
    INT 21H
	
	MOV AH,1
    INT 21H
	CMP AL,'2'
	JNE ELSE1
		
L:	CALL COLOR
	MOV AH,9
    MOV DX,OFFSET ABOUT
	INT 21H
	
	
	CALL ENTER1
    CALL ENTER1
	MOV AH,9
	MOV DX,OFFSET (MSG2)
	INT 21H
	MOV AH,1
	INT 21H
	CMP AL,'n'
	JNE L
	JMP END1
	ELSE1:
	CMP AL,'1'
	JNE ELSE2
	
	CALL COLOR
	
	CALL GAME
	
	
	ADD PLAYER,30H
	
	CALL COLOR
	
	MOV AH,9
	MOV DX,OFFSET(FINISH1)
	INT 21H
	
	
	
	MOV AH,2
	MOV DL,PLAYER
	INT 21H
	
	
	MOV AH,9
	MOV DX,OFFSET(FINISH2)
	INT 21H
	
	MOV AH,9
	MOV DX,OFFSET(FINISH3)
	INT 21H
	
	CALL PAUSE_G
	
	JMP END1
	ELSE2:
	CMP AL,'3'
	JNE ELSE3
	
	CALL COLOR
	MOV AH,9
	MOV DX,OFFSET(START)
	INT 21H
	CALL PAUSE_G
	ELSE3:
	CMP AL,'4'
	JNE END1
	
	
END1:	

    CALL COLOR
	MOV AH,9
    MOV DX,OFFSET(THANKS)
	INT 21H
	

	
	MOV AH,4CH
	INT 21H
	MAIN ENDP


	
	
	
	
	
	
	COLOR PROC    ;Graphics intrupts
        
	MOV AH,0
	MOV AL,10H 
	INT 10H
		
	MOV AH,0BH
	MOV BX,0100B
	INT 10H        
        
        RET
        
    COLOR ENDP
	
	ENTER1 PROC 
          
         MOV AH,2
         MOV DL,10
         INT 21H
         MOV DL,13
         INT 21H
         RET
         
    ENTER1 ENDP
	
	
	
	GAME PROC
	
	
	MOV AH,0H
	MOV AL,12H
	INT 10H
	
	MOV AH,0BH
	MOV BH,0H
	MOV BL,01H
	INT 10H
	
	CALL ALL_BUILD
	
	MOV B_COLOR,04H
	MOV B_X1,10
	MOV B_Y1,35
	MOV B_Y2,65
	MOV B_X2,250
	CALL BUILDING
	
	MOV B_COLOR,04H
	
	MOV B_X1,380
	MOV B_Y1,35
	MOV B_Y2,65
	MOV B_X2,630
	CALL BUILDING
	
	CALL PLATFORM
	CALL CHARACTER
	CALL R_CHARACTER
	MOV NEW,OFFSET CHECK_kEY_PRESSED
    MOV NEW+2,CS ;
	MOV AL,9 
	LEA DI,OLD 
	LEA SI,NEW
	CALL SETUP_INT
	
	
	
	
	MAINLOOP:
	
	CALL RE_CHARACTER
	CALL CHARACTER
	;CALL RE_CHARACTER
	CALL RE_R_CHARACTER
	CALL R_CHARACTER
	;CALL RE_R_CHARACTER
    
	CMP FLAG,1
	JNE END1
	CALL RE_CHARACTER
	CALL RE_R_CHARACTER
	
	
	
	CMP KEY,44
	JNE ELSE1
	
	
	CALL CHARACTER_KICK
	CALL DELY
	CALL RE_CHARACTER_KICK
	MOV PLAYER,1H
	;CALL DELY
	MOV FLAG,0H
	MOV KEY,0H
	
	MOV AX,STX
	ADD AX,110
	MOV BX,STX1
	SUB BX,10
	SUB BX,AX
	CMP BX,0
	JNLE END1
	
	MOV FREQUENCY,3087
	CALL BEEP
	
	CMP HR,610
	JGE EXIT
	
	MOV AX,HR
	MOV B_X1,AX
	ADD AX,20
	MOV B_X2,AX
	MOV HR,AX
	MOV B_COLOR,0H
	CALL BUILDING
	JMP END1
	ELSE1:
	CMP KEY,31
	JNE ELSE2
	
	MOV AX,STX1
	SUB AX,100
	CMP STX,AX
	JGE SOUND1
	
	MOV FREQUENCY,1000
	CALL BEEP
	
	ADD STX,20
	CALL CHARACTER
	CALL RE_CHARACTER
	;CALL DELY
	MOV FLAG,0H
	MOV KEY,0H
	
	
	
	JMP END1
	ELSE2:
	CMP KEY,45
	JNE ELSE3
	
	
	CALL CHARACTER_PUNCH
	CALL DELY
	CALL RE_CHARACTER_PUNCH
	MOV PLAYER,1H
	;CALL DELY
	MOV FLAG,0H
	MOV KEY,0H
	
	MOV AX,STX
	ADD AX,110
	MOV BX,STX1
	SUB BX,10
	SUB BX,AX
	CMP BX,0
	JNLE END1
	
	MOV FREQUENCY,2087
	CALL BEEP
	
	CMP HR,610
	JGE EXIT
	
	MOV AX,HR
	MOV B_X1,AX
	ADD AX,10
	MOV B_X2,AX
	MOV HR,AX
	MOV B_COLOR,0H
	CALL BUILDING
	JMP END1
	ELSE3:
	CMP KEY,30
	JNE ELSE4	
	MOV AX,100
	CMP STX,AX
	JLE SOUND1
	
	MOV FREQUENCY,1000
	CALL BEEP
	
	SUB STX,20
	CALL CHARACTER
	CALL RE_CHARACTER
	;CALL DELY
	MOV FLAG,0H
	MOV KEY,0H
	
	
	
	
	JMP END1
	ELSE4:
	CMP KEY,36
	JNE ELSE5
	
	MOV AX,STX1
	SUB AX,100
	CMP AX,STX
	JLE SOUND1
	
	MOV FREQUENCY,1000
	CALL BEEP
	
	SUB STX1,20
	CALL R_CHARACTER
	CALL RE_R_CHARACTER
	MOV FLAG,0H
	MOV KEY,0H
	
	JMP END1
	ELSE5:
	CMP KEY,37
	JNE ELSE6
	
	
	
	MOV AX,540
	CMP STX1,AX
	JGE SOUND1
	
	MOV FREQUENCY,1000
	CALL BEEP
	
	ADD STX1,20
	CALL R_CHARACTER
	CALL RE_R_CHARACTER
	MOV FLAG,0H
	MOV KEY,0H
	
	JMP END1
	ELSE6:
	CMP KEY,49
	JNE ELSE7
	
	CALL R_CHARACTER_PUNCH
	CALL DELY
	CALL RE_R_CHARACTER_PUNCH
	MOV PLAYER,2H
	MOV FLAG,0H
	MOV KEY,0H
	
	MOV AX,STX1
	SUB AX,110
	MOV BX,STX
	ADD BX,10
	SUB AX,BX
	CMP AX,0
	JNLE END1
	
	MOV FREQUENCY,2087
	CALL BEEP
	
	CMP HL,30
	JLE EXIT
	
	MOV AX,HL
	MOV B_X2,AX
	SUB AX,10
	MOV B_X1,AX
	MOV HL,AX
	MOV B_COLOR,0H
	CALL BUILDING
	
	
	
	JMP END1
	ELSE7:
	CMP KEY,50
	JNE ELSE8
	
	
	CALL R_CHARACTER_KICK
	CALL DELY
	CALL RE_R_CHARACTER_KICK
	MOV PLAYER,2H
	MOV FLAG,0H
	MOV KEY,0H
	
	MOV AX,STX1
	SUB AX,110
	MOV BX,STX
	ADD BX,10
	SUB AX,BX
	CMP AX,0
	JNLE END1
	
	MOV FREQUENCY,3087
	CALL BEEP
	
	CMP HL,30
	JLE EXIT
	
	MOV AX,HL
	MOV B_X2,AX
	SUB AX,20
	MOV B_X1,AX
	MOV HL,AX
	MOV B_COLOR,0H
	CALL BUILDING
	
	JMP END1
	
	ELSE8:
	CMP KEY,25
	JNE END1


	CALL PAUSE_G
	
	
	JMP END1
	ELSE9:
	JMP END1
	
	
	JMP END1
	SOUND1:
	
	MOV FREQUENCY,9121
	CALL BEEP
	
	
	
	END1:
	JMP MAINLOOP
	EXIT:
	
	
	
	;03157696870
	
	
	LEA DI,NEW 
	LEA SI,OLD 
	MOV AL,9 
	CALL SETUP_INT

	MOV AH,0 
	MOV AL,3 
	INT 10H 
	
	
	RET 
	GAME ENDP
	
	
	
	
	
	
	
	
	PAUSE_G PROC
	
	MOV NEW,OFFSET CHECK_kEY_PRESSED
    MOV NEW+2,CS ;
	MOV AL,9 
	LEA DI,OLD 
	LEA SI,NEW
	CALL SETUP_INT
	
	
	LOOP1:
	
	
	CMP FLAG,0
	JE END_P
	
	CMP KEY,19
	JE EXIT_L
	
	END_P:
	JMP LOOP1
	EXIT_L:
	
	LEA DI,NEW 
	LEA SI,OLD 
	MOV AL,9 
	CALL SETUP_INT
	
	
	RET 
	PAUSE_G ENDP
	
	
	CHECK_kEY_PRESSED PROC
	;;;;;;;; TRYING TO WRITE kEY BOARD ;;;;;;;;;;;;;
	
	;Descrition of the code is if any key press then in set "flag" variable to 1 and entered value store in "key" variable;
	
	PUSH DS 
	PUSH AX 
	MOV AX,SEG KEY 
	MOV DS, AX 
	IN AL,60H
	PUSH AX 
	IN AL,61H
	MOV AH,AL 
	OR AL, 80H 
	OUT 61H,AL 
	XCHG AH,AL 
	OUT 61H,AL 
	POP AX 
	MOV AH,AL 
	TEST AL,80H 
	JNE KEY_0
	
	MOV FLAG,1
		
	MOV KEY,AL
	
	
	
	KEY_0: 
	
	MOV AL,20H 
	OUT 20H,AL 
	
	POP AX 
	POP DS
	
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
	
	IRET 
	CHECK_kEY_PRESSED ENDP
	
	SETUP_INT PROC
		MOV AH,35H
		INT 21h
		MOV [DI],BX
		MOV [DI+2],ES
		MOV DX,[SI]
		PUSH DS
		MOV DS,[SI+2]
		MOV AH,25H
		INT 21h
		POP DS
		RET
	SETUP_INT ENDP
	
	PLATFORM PROC
	
	P_LOOP1:
	
	MOV AX,P_X1
	MOV P_X1L,AX
	
	MOV AX,P_X2
	MOV P_X2L,AX
	
	P_LOOP2:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0H
	MOV CX,P_X1L
	MOV DX,P_Y1L
	INT 10H
	
	INC P_X1L
	MOV AX,P_X1L
	CMP AX,P_X2L
	JNE P_LOOP2
	
	;MOV DX,0H
	;MOV AX,X1
	;MOV BX,4
	;DIV BX
	;CMP DX,0H
	;JNE NOTINC
	
	INC P_CHOICE
	CMP P_CHOICE,5H
	JNE P_NOTINC
	
	INC P_X1
	DEC P_X2
	MOV P_CHOICE,0H
	
	P_NOTINC:
	
	
	DEC P_Y1L
	DEC P_Y1
	JNZ P_LOOP1
	
	
	
	RET
	PLATFORM ENDP
	
	
	CHARACTER PROC
	
	;FOR-BODY
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	INC TEMPY
	CMP TEMPY,400
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC
	
	DEC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC1
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,340
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,60
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,5H
	JNE C_NOTINC2
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC3
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,45
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,5H
	JNE C_NOTINC4
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	CHARACTER ENDP
	
	
		CHARACTER_KICK PROC
	
	;FOR-BODY
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	INC TEMPX
	INC TEMPY
	CMP TEMPY,360
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	MOV AX,TEMPX
	ADD AX,80
	MOV C_I,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC TEMPY
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,3H
	JNE C_NOTINC
	
	DEC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC1
	
	DEC TEMPX
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,300
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,40
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,7H
	JNE C_NOTINC2
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	INC TEMPY
	CMP TEMPY,340
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,4H
	JNE C_NOTINC3
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,10
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC4
	
	INC TEMPY
	INC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	CHARACTER_KICK ENDP
	
	
	CHARACTER_PUNCH PROC
	
	;FOR-BODY
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	INC TEMPY
	CMP TEMPY,400
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC
	
	DEC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC1
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,305
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,120
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,9H
	JNE C_NOTINC2
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,4H
	JNE C_NOTINC3
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,20
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC4
	
	INC TEMPY
	INC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0EH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	CHARACTER_PUNCH ENDP
	
	
	
	R_CHARACTER PROC
	
	;FOR-BODY
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX1
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	INC TEMPY
	CMP TEMPY,400
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC
	
	INC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC1
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,340
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,60
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,5H
	JNE C_NOTINC2
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	DEC C_I
	MOV AX,TEMPX
	SUB AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	INC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC3
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,45
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,5H
	JNE C_NOTINC4
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	DEC C_I
	MOV AX,TEMPX
	SUB AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	INC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX1
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX1
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX1
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	R_CHARACTER ENDP
	
	
	R_CHARACTER_PUNCH PROC
	
	;FOR-BODY
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX1
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	INC TEMPY
	CMP TEMPY,400
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC
	
	INC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC1
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,305
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,120
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,9H
	JNE C_NOTINC2
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	DEC C_I
	MOV AX,TEMPX
	SUB AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	INC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,4H
	JNE C_NOTINC3
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,20
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC4
	
	INC TEMPY
	INC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX1
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX1
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX1
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	R_CHARACTER_PUNCH ENDP
	
	
	
	
	R_CHARACTER_KICK PROC
	
	;FOR-BODY
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX1
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC TEMPX
	INC TEMPY
	CMP TEMPY,360
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	MOV AX,TEMPX
	SUB AX,80
	MOV C_I,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC TEMPY
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,3H
	JNE C_NOTINC
	
	INC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC1
	
	INC TEMPX
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,300
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,40
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,7H
	JNE C_NOTINC2
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	INC TEMPY
	CMP TEMPY,340
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,4H
	JNE C_NOTINC3
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,10
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC4
	
	INC TEMPY
	INC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX1
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX1
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX1
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0FH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	R_CHARACTER_KICK ENDP
	
	
	RE_CHARACTER PROC
	
	;FOR-BODY
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	INC TEMPY
	CMP TEMPY,400
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC
	
	DEC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC1
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,340
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,60
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,5H
	JNE C_NOTINC2
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC3
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,45
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,5H
	JNE C_NOTINC4
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	RE_CHARACTER ENDP
	
	
	RE_CHARACTER_PUNCH PROC
	
	;FOR-BODY
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	INC TEMPY
	CMP TEMPY,400
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC
	
	DEC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC1
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,305
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,120
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,9H
	JNE C_NOTINC2
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,4H
	JNE C_NOTINC3
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,20
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC4
	
	INC TEMPY
	INC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	RE_CHARACTER_PUNCH ENDP
	
	
	RE_CHARACTER_KICK PROC
	
	;FOR-BODY
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	INC TEMPX
	INC TEMPY
	CMP TEMPY,360
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	MOV AX,TEMPX
	ADD AX,80
	MOV C_I,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC TEMPY
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,3H
	JNE C_NOTINC
	
	DEC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC1
	
	DEC TEMPX
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,300
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,40
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,7H
	JNE C_NOTINC2
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	INC TEMPY
	CMP TEMPY,340
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,4H
	JNE C_NOTINC3
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	ADD AX,10
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC4
	
	INC TEMPY
	INC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	INC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	RE_CHARACTER_KICK ENDP
	
	
	RE_R_CHARACTER PROC
	
	;FOR-BODY
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX1
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	INC TEMPY
	CMP TEMPY,400
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC
	
	INC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC1
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,340
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,60
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,5H
	JNE C_NOTINC2
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	DEC C_I
	MOV AX,TEMPX
	SUB AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	INC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC3
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,45
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,5H
	JNE C_NOTINC4
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	DEC C_I
	MOV AX,TEMPX
	SUB AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	INC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX1
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX1
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX1
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	RE_R_CHARACTER ENDP
	
	
	RE_R_CHARACTER_PUNCH PROC
	
	;FOR-BODY
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX1
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	INC TEMPY
	CMP TEMPY,400
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,2H
	JNE C_NOTINC
	
	INC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC1
	
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,305
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,120
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,9H
	JNE C_NOTINC2
	
	DEC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	DEC C_I
	MOV AX,TEMPX
	SUB AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	INC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,4H
	JNE C_NOTINC3
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,20
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC4
	
	INC TEMPY
	INC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX1
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX1
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX1
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	RE_R_CHARACTER_PUNCH ENDP
	
	
	RE_R_CHARACTER_KICK PROC
	
	;FOR-BODY
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	LOOP1:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	CMP TEMPY,350
	JNE LOOP1
	
	;LEG1
	
	MOV AX,STX1
	MOV TEMPX,AX
	;MOV AX,STY
	;ADD AX,100
	;MOV TEMPY,AX 
	
	
	LOOP2:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC TEMPX
	INC TEMPY
	CMP TEMPY,360
	JNE LOOP2

	
	;MOV AX,STY
	;ADD AX,150
	;MOV TEMPY,AX
	MOV AX,TEMPX
	SUB AX,80
	MOV C_I,AX
	
	LOOP3:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	DEC TEMPY
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP3
	
	
	
	MOV C_I,10H
	
	LOOP5:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	DEC C_I
	JNZ LOOP5
	
	;LEG2
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV TEMPY,351
	
	LOOP4:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,3H
	JNE C_NOTINC
	
	INC TEMPX
	MOV C_CHOICE,0H
	
	C_NOTINC:
	
	INC TEMPY
	CMP TEMPY,450
	JNE LOOP4
	
	MOV C_I,10H
	
	LOOP6:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	DEC C_I
	JNZ LOOP6
	
	;HAND1
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP7:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC1
	
	INC TEMPX
	INC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC1:
	
	INC TEMPY
	CMP TEMPY,300
	JNE LOOP7
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,40
	MOV C_I,AX
	
	LOOP8:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,7H
	JNE C_NOTINC2
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC2:
	INC TEMPY
	CMP TEMPY,340
	JNE LOOP8
	

	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP15:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP15
	
	LOOP16:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP16
	
	LOOP17:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP17
	
	LOOP18:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP18
	
	;HAND2
	
	
	MOV AX,STX1
	MOV TEMPX,AX
	MOV AX,STY
	MOV TEMPY,AX
	
	MOV C_CHOICE,0H
	
	LOOP9:
	

	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,4H
	JNE C_NOTINC3
	
	DEC TEMPX
	
	MOV C_CHOICE,0H
	
	C_NOTINC3:
	
	INC TEMPY
	CMP TEMPY,315
	JNE LOOP9
	
	MOV C_CHOICE,0H
	
	
	
	MOV AX,TEMPX
	SUB AX,10
	MOV C_I,AX
	
	LOOP10:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC C_CHOICE
	CMP C_CHOICE,1H
	JNE C_NOTINC4
	
	INC TEMPY
	INC TEMPY
	
	MOV C_CHOICE,0H
	
	C_NOTINC4:
	
	DEC TEMPX
	MOV AX,C_I
	CMP TEMPX,AX
	JNE LOOP10
	
	
	MOV AX,TEMPX
	MOV C_I,AX
	MOV AX,TEMPY
	SUB AX,5
	MOV C_J,AX
	
	LOOP19:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_I
	MOV AX,TEMPX
	ADD AX,10
	CMP AX,C_I
	JNE LOOP19
	
	LOOP20:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	
	INC C_J
	MOV AX,TEMPY
	ADD AX,5
	CMP AX,C_J
	JNE LOOP20
	
	LOOP21:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_I
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP21
	
	LOOP22:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,C_I
	MOV DX,C_J
	INT 10H
	
	DEC C_J
	MOV AX,TEMPY
	SUB AX,5
	CMP AX,C_J
	JNE LOOP22
	
	
	;HEAD
	
	MOV AX,STX1
	SUB AX,20
	MOV TEMPX,AX
	MOV AX,STY
	SUB AX,40
	MOV TEMPY,AX
	MOV AX,STX1
	ADD AX,20
	MOV C_I,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,STY
	JNE LOOP12
	
	MOV AX,STX1
	SUB AX,20
	MOV C_I,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,C_I
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,0CH
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,STY
	SUB AX,40
	CMP AX,TEMPY
	JNE LOOP14
	
	RET
	RE_R_CHARACTER_KICK ENDP
	
	
	DELY PROC
	
	MOV AX,00H
	INT 1AH
	MOV TIK,DX
	ADD TIK, 2H     ; YOU CAN 1H 2H 3H AT THIS LINE AS YOU INCRESE THE NUMBER DELAY WILL INCRESE or YOU CAN SEE BOOK DEPLY FUNCTION AS WELL IN CHAPTER 16
	DELAY:
	MOV AX,00H
	INT 1AH
	CMP TIK, DX
	JGE DELAY
	RET
	DELY ENDP
	
	
	
	ALL_BUILD PROC
	
	
	
			;-------------------------------
						;BUILDING 1
	CALL BUILDING
			;Window 1
	MOV B_X1,90			;+20
	MOV B_X2,100
	MOV B_Y1,110		;+10
	MOV B_Y2,140
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,100
	MOV B_X2,110
	CALL BUILDING_OUTLINE
	
			;Window 2
	MOV B_X1,140
	MOV B_X2,150
	MOV B_Y1,110
	MOV B_Y2,140
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,150
	MOV B_X2,160
	CALL BUILDING_OUTLINE
	
	;Window 3
	MOV B_X1,90			;+20
	MOV B_X2,100
	MOV B_Y1,160			;+30
	MOV B_Y2,190
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,100
	MOV B_X2,110
	CALL BUILDING_OUTLINE
	
	
	
	
	;Window 4
	MOV B_X1,140
	MOV B_X2,150
	MOV B_Y1,160
	MOV B_Y2,190
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,150
	MOV B_X2,160
	CALL BUILDING_OUTLINE
	
			;DOOR1
			
	MOV B_X1,112
	MOV B_X2,140
	MOV B_Y1,205
	MOV B_Y2,249
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	
	MOV B_X1,132
	MOV B_X2,136
	MOV B_Y1,229
	MOV B_Y2,233
	MOV B_COLOR,01H
	CALL BUILDING
	
				;-------------------------------
						;BUILDING 2
	MOV B_X1,260			;+20
	MOV B_X2,370
	MOV B_Y1,100		;+30
	MOV B_Y2,250
	MOV B_COLOR,1000B

	CALL BUILDING
			
		;Window 1
	MOV B_X1,280			;+20
	MOV B_X2,290
	MOV B_Y1,110		;+30
	MOV B_Y2,140
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,290
	MOV B_X2,300
	CALL BUILDING_OUTLINE
	
			;Window 2
	MOV B_X1,330
	MOV B_X2,340
	MOV B_Y1,110
	MOV B_Y2,140
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,340
	MOV B_X2,350
	CALL BUILDING_OUTLINE
	
	;Window 3
	MOV B_X1,280			;+20
	MOV B_X2,290
	MOV B_Y1,160			;+30
	MOV B_Y2,190
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,290
	MOV B_X2,300
	CALL BUILDING_OUTLINE
	
	;Window 4
	MOV B_X1,330
	MOV B_X2,340
	MOV B_Y1,160
	MOV B_Y2,190
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,340
	MOV B_X2,350
	CALL BUILDING_OUTLINE
	
				;DOOR 2
			
	MOV B_X1,302
	MOV B_X2,330		;WIDTH 28
	MOV B_Y1,205
	MOV B_Y2,249		;LENGTH 45
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	
	MOV B_X1,322
	MOV B_X2,326
	MOV B_Y1,229
	MOV B_Y2,233
	MOV B_COLOR,01H
	CALL BUILDING
		
			
			;-------------------------------
						;BUILDING 3
	MOV B_X1,450			;+20
	MOV B_X2,560
	MOV B_Y1,100		;+30
	MOV B_Y2,250
	MOV B_COLOR,1000B

	CALL BUILDING

		;Window 1
	MOV B_X1,470			;+20
	MOV B_X2,480
	MOV B_Y1,110		;+30
	MOV B_Y2,140
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,480
	MOV B_X2,490
	CALL BUILDING_OUTLINE
	
			;Window 2
	MOV B_X1,520
	MOV B_X2,530
	MOV B_Y1,110
	MOV B_Y2,140
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,530
	MOV B_X2,540
	CALL BUILDING_OUTLINE
	
	;Window 3
	MOV B_X1,470			;+20
	MOV B_X2,480
	MOV B_Y1,160			;+30
	MOV B_Y2,190
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,480
	MOV B_X2,490
	CALL BUILDING_OUTLINE
	
	;Window 4
	MOV B_X1,520
	MOV B_X2,530
	MOV B_Y1,160
	MOV B_Y2,190
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	MOV B_X1,530
	MOV B_X2,540
	CALL BUILDING_OUTLINE
	
			;DOOR 3
			
	MOV B_X1,492
	MOV B_X2,520		;WIDTH 28
	MOV B_Y1,205
	MOV B_Y2,249		;LENGTH 45
	MOV B_COLOR,01H
	CALL BUILDING_OUTLINE
	
	MOV B_X1,513
	MOV B_X2,517
	MOV B_Y1,229
	MOV B_Y2,233
	MOV B_COLOR,01H
	CALL BUILDING
	
	
	
	RET
	ALL_BUILD ENDP
	
	
	
	
	BUILDING PROC
	
	
	MOV AX,B_Y1
	MOV TEMPY,AX
	
	LOOP1:
	MOV AX,B_X1
	MOV TEMPX,AX
	
	LOOP2:
	
	MOV AH,0CH
	MOV AL,B_COLOR
	MOV BH,0H
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	INC TEMPX
	MOV AX,B_X2
	CMP TEMPX,AX
	JNE LOOP2
	
	
	INC TEMPY
	MOV AX,B_Y2
	CMP TEMPY,AX
	JNE LOOP1
	
	RET
	BUILDING ENDP
	
	BUILDING_OUTLINE PROC
	
	
	MOV AX,B_X1
	MOV TEMPX,AX
	MOV AX,B_Y1
	MOV TEMPY,AX
	
	LOOP11:
	
	MOV AH,0CH
	MOV AL,B_COLOR
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPX
	MOV AX,TEMPX
	CMP AX,B_X2
	JNE LOOP11
	
	LOOP12:
	
	
	MOV AH,0CH
	MOV AL,B_COLOR
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	
	INC TEMPY
	MOV AX,TEMPY
	CMP AX,B_Y2
	JNE LOOP12
	
	MOV AX,B_X2
	MOV TEMPX,AX
	MOV AX,B_Y2
	MOV TEMPY,AX
	
	LOOP13:
	
	MOV AH,0CH
	MOV AL,B_COLOR
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPX
	MOV AX,TEMPX
	CMP AX,B_X1
	JNE LOOP13
	
	LOOP14:
	
	
	MOV AH,0CH
	MOV AL,B_COLOR
	MOV BH,0
	MOV CX,TEMPX
	MOV DX,TEMPY
	INT 10H
	
	DEC TEMPY
	MOV AX,B_Y1
	CMP AX,TEMPY
	JNE LOOP14
	
	RET 
	BUILDING_OUTLINE ENDP
	
	BEEP PROC ;USES AX BX CX
    
	mov     al, 182         ; Prepare the speaker for the
        out     43h, al         ;  note.
        mov     ax, FREQUENCY        ; Frequency number (in decimal)
                                ;  for middle C.
        out     42h, al         ; Output low byte.
        mov     al, ah          ; Output high byte.
        out     42h, al 
        in      al, 61h         ; Turn on note (get value from
                                ;  port 61h).
        or      al, 00000011b   ; Set bits 1 and 0.
        out     61h, al         ; Send new value.
        mov     bx, 1          ; Pause for duration of note.
pause1:
        mov     cx, 65535
pause2:
        dec     cx
        jne     pause2
        dec     bx
        jne     pause1
        in      al, 61h         ; Turn off note (get value from
                                ;  port 61h).
        and     al, 11111100b   ; Reset bits 1 and 0.
        out     61h, al      
	
    RET
	BEEP ENDP
	
	
	main1 proc
	MOV CX , 18
		MOV SI , 0
		MOV DL , 0
		SAI:
		PUSH CX
		MOV AH , 2
		MOV BH , 0
		MOV DH , 18
		INT 10H
		;--------------
		MOV AH , 9     ; FUNCTION 
		MOV AL , '-'
		MOV BH , 0
		MOV BL , 0BH
		MOV CX , 1
		INT 10H
		INC DL
		POP CX
		INC SI
		LOOP SAI
		;--------------------------------------------------
		;--------------------------------------------------
		MOV CX , 18
		MOV SI , 0
		MOV DL , 0
		ALKA:
		PUSH CX
		MOV AH , 2
		MOV BH , 0
		MOV DH , 21
		INT 10H
		;--------------
		MOV AH , 9     
		MOV AL , '-'
		MOV BH , 0
		MOV BL , 0BH
		MOV CX , 1
		INT 10H
		INC DL
		POP CX
		INC SI
		LOOP ALKA
		;--------------------------------------------------
		;--------------------------------------------------



		;--------------------------------------------------		

		MOV CX , 3
		MOV SI , 0
		MOV DH , 18
		ALJA:
		PUSH CX
		MOV AH , 2
		MOV BH , 0
		MOV DL , 0
		INT 10H
		;--------------
		MOV AH , 9     ; FUNCTION 
		MOV AL , '#'
		MOV BH , 0
		MOV BL , 0BH
		MOV CX , 1
		INT 10H
		INC DH
		POP CX
		INC SI
		LOOP ALJA
		;--------------------------------------------------
		;--------------------------------------------------		

		MOV CX , 3
		MOV SI , 0
		MOV DH , 18
		ASDF:
		PUSH CX
		MOV AH , 2
		MOV BH , 0
		MOV DL , 18
		INT 10H
		;--------------
		MOV AH , 9     ; FUNCTION 
		MOV AL , '#'
		MOV BH , 0
		MOV BL , 0BH
		MOV CX , 1
		INT 10H
		INC DH
		POP CX
		INC SI
		LOOP ASDF
	 CALL COLOR
        MOV AH,9
        MOV DX,OFFSET (WELCOME)
        INT 21H 
       
        CALL ENTER1
	
	MOV AH,9
	MOV DX,OFFSET (MSG2)
   INT 21H
	
	ret
	main1 endp
	
	
main2 PROC
mov ah,0
mov al,10h
int 10h
;===========================

;call BOX_DRAW
call get_value
ret
main2 ENDP
;================================
get_value proc

call main1
Call HideCursor11
;Call WriteString
Call ShowMousePointer
mov dh,24
mov dl,0
;Call Gotoxy
;mov dx,OFFSET StatusLine
;Call WriteString
;=================================
L1: 
Call ShowMousePosition
Call LeftButtonClick    
mov ah,11h
int 16h
jz l2
mov ah,10h
int 16h
cmp al,ESCKEY
je Quit
L2: jmp L1
Quit: Call HideMousePointer
Call ShowCursor11
;Call ClrScr
;Call waitmsg
;================================
ret
get_value endp

;================================
GetMousePosition PROC
push ax
mov ax,3
int 33h
pop ax
ret
GetMousePosition ENDP
;===============================
HideCursor11 PROC
mov ah,3
int 10h
or ch,30h
mov ah,1
int 10h
ret
HideCursor11 ENDP
;===============================
ShowCursor11 PROC
mov ah,3
int 10 
mov ah,1
mov cx,0607h
int 10h
ret
ShowCursor11 ENDP
;===============================
HideMousePointer PROC
push ax
mov ax,2
int 33h
pop ax
ret
HideMousePointer ENDP
;==============================
ShowMousePointer PROC
push ax
mov ax,1
int 33h
pop ax
ret
ShowMousePointer ENDP
;===============================
LeftButtonClick PROC
push a
mov ah,0
mov al,5
mov bx,0
int 33h
;-----------------------------------
and ax,1
.if ax==1
.IF ( cx>0 && cX<100 ) && (dx>215 && dx<270)
;mov QP,2
jmp REPEAT_A
.endif
.endif
cmp cx,Xclick
jne lbc1
cmp bx,Yclick
je lbc_exit
LBC1:
mov Xclick,cx
mov Yclick,dx
mov dh,24
mov dl,15
;call gotoxy
push dx


pop dx
;Call Gotoxy
mov ax,Xcoordinate

mov dl,20
;call gotoxy
mov ax,ycoordinate
 MOV AH,1
        INT 21H
		;--------------------------------------------------
	
        CMP AL,'n'
	
	mov ax , 0600h
	mov cx,0
	mov dx,184Fh
	mov bh,0
	int 10h
	mov ah,2 
	mov bh,0
	mov dx, 0
	int 10h
lbc_exit:
pop a
ret
leftButtonClick ENDP
;=================================
SETMousePosition PRoc
mov ax,4
int 33h
ret

SetMousePosition ENDP
;=================================
ShowMousePosition PROC

push a
Call GetMousePosition
cmp cx,xcoordinate
jne smp1
cmp dx,ycoordinate
je smp_exit
smp1: mov xcoordinate,cx
mov ycoordinate,dx
mov dh,24
mov dl,60
;Call gotoxy
push dx

;Call WriteString
pop dx
;Call gotoxy
mov ax, xcoordinate
;Call WriteDec
mov dl,65
;call gotoxy
mov ax,ycoordinate
;Call WriteDec
smp_exit:
pop a
ret
ShowMousePosition ENDP
;=====================================;
;Loading functions


gotoxy1 PROC
	push a
	mov ah,2
	mov bh,0
	int 10h
	pop a
ret
gotoxy1 ENDP

Wall PROC
	push a
	mov ah,2
	mov bh,0
	int 10h
	mov ah,9
	mov bh,0
	mov bl,0dh
	mov cx,1
	int 10h
	pop a
ret
Wall ENDP
;=======================getValue=================
get_value1 proc
	Call ShowMousePointer1
;-------------------------------------------------------------------------------------
L1:
	
	Call LeftButtonClick1 
	

L2:
		jmp L1
;--------------------------------------------------------------------------------------
ret
get_value1 endp
;--------------------------------------------------------------------------------------
GetMousePosition1 PROC
		push ax
		mov ax,3
		int 33h
		pop ax
	ret
GetMousePosition1 ENDP
;--------------------------------------------------------------------------------------
ShowCursor111 PROC
		mov ah,3
		int 10 
		mov ah,1
		mov cx,0607h
		int 10h
	ret
ShowCursor111 ENDP
;---------------------------------------------------------------------------------------
HideMousePointer1 PROC
		push ax
		mov ax,2
		int 33h
		pop ax
	ret
HideMousePointer1 ENDP
;---------------------------------------------------------------------------------------
ShowMousePointer1 PROC
		push ax
		mov ax,1
		int 33h
		pop ax
	ret
ShowMousePointer1 ENDP
;----------------------------------------------------------------------------------------
LeftButtonClick1 PROC
		push ax
		push bx
		mov ax , 5
		mov bx,0
		int 33h
		and ax,1
		mov button,ax
.IF button==1
.IF ((cx>=150 && cx<=215) && (dx>=70 && dx<=140))
mov b,1

.ENDIF
.IF ((cx>=150 && cx<=215) && (dx>=141 && dx<=210))
mov b,4
.ENDIF
.IF ((cx>=150 && cx<=215) && (dx>=211 && dx<=270))
mov b,7
.ENDIF
.IF ((cx>=215 && cx<=280) && (dx>=70 && dx<=140))
mov b,2
.ENDIF
.IF ((cx>=215 && cx<=280) && (dx>=141 && dx<=210))
mov b,5

.ENDIF
.IF ((cx>=215 && cx<=280) && (dx>=211 && dx<=270))
mov b,8

.ENDIF
.IF ((cx>=280 && cx<=350) && (dx>=70 && dx<=140))
mov b,3

.ENDIF
.IF ((cx>=280 && cx<=350) && (dx>=141 && dx<=210))
mov b,6

.ENDIF
.IF ((cx>=280 && cx<=350) && (dx>=211 && dx<=270))
mov b,9

.ENDIF
.endif

pop bx
pop ax
ret
leftButtonClick1 ENDP
;=================================
SETMousePosition1 PRoc
mov ax,4
int 33h
ret
SetMousePosition1 ENDP
;=================================
ShowMousePosition1 PROC
push a
Call GetMousePosition1
pop a
ret
ShowMousePosition1 ENDP


	
	
	

	
END MAIN